<%@ CodeTemplate Language="C#" TargetLanguage="C#" Debug="True" Description="Generate SQL Insert Statements from table data." ResponseEncoding="UTF-8" %>

<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="System.Design" %>
<%@ Assembly Name="System.Data" %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="System" %>
<%@ Import Namespace="System.Collections.Generic" %>


<%@ Property Category="Data" Name="SourceTable" Optional="False"
    Type="CodeSmith.CustomProperties.StringCollection" 
    Description="Data Source" %>
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由梁爽制作的工具于【<%= DateTime.Now.ToString("yyyy-MM-dd hh:mm:ss") %>】生成。
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using UAPLibrary.Utility;
using UAPLibrary.Entity;

namespace UAPLibrary.Packet
{
<% foreach (String line in this.SourceTable) {  %>
<% 
string[] strs = line.Split(new string[]{":"}, StringSplitOptions.RemoveEmptyEntries);
string[] str1 = strs[0].Split(new string[]{"|"}, StringSplitOptions.RemoveEmptyEntries);
string[] str2 = null;
List<KeyValuePair<string, string>> strPair = new List<KeyValuePair<string, string>>();
if (strs.Length > 1)
{
    str2 = strs[1].Split(new string[]{"&"}, StringSplitOptions.RemoveEmptyEntries);
    for (int i = 0; i < str2.Length; ++i)
    {
        string[] tempStr = str2[i].Split(new string[]{"|"}, StringSplitOptions.RemoveEmptyEntries);
        strPair.Add(new KeyValuePair<string, string>(tempStr[0], tempStr[1]));
    }
}
string uapPacketName = str1[0]; 
string uapSummary = str1[2]; 
%>
    #region Uap<%=uapPacketName%>Event:<%=uapSummary%>
    /// <summary>
    /// <%=uapSummary%>事件的委托
    /// </summary>
    /// <param name="source">事件源</param>
    /// <param name="e"><%=uapSummary%>事件参数</param>
    public delegate void Uap<%=uapPacketName%>EventHandler(object source, Uap<%=uapPacketName%>EventArgs e);

    /// <summary>
    /// <%=uapSummary%>事件参数
    /// </summary>
    public class Uap<%=uapPacketName%>EventArgs : UapEventArgs
    {
        private Uap<%=uapPacketName%> _response;

        /// <summary>
        /// 访问<%=uapSummary%>事件源的数据
        /// </summary>
        public Uap<%=uapPacketName%> <%=uapPacketName%>Uap
        {
            get
            {
                return _response;
            }
        }

        /// <summary>
        /// 创建<%=uapSummary%>事件参数
        /// </summary>
        /// <param name="response">Uap<%=uapPacketName%>包</param>
        public Uap<%=uapPacketName%>EventArgs(Uap<%=uapPacketName%> response)
            : base(response)
        {
            _response = response;
        }
    }

    #endregion Uap<%=uapPacketName%>Event:<%=uapSummary%>
    
<% } %>
}